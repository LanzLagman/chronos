#!/usr/bin/env python
"""
make tql figure for all members of a given cluster
the sap_mask is fixed as square with aper_radius=1 to make sure
it is centered on target
"""
import matplotlib
import chronos as cr
from tqdm import tqdm
import argparse

matplotlib.use("pdf")
parser = argparse.ArgumentParser(description="create tql based on chronos")
parser.add_argument("cluster", type=str, help="cluster name")
parser.add_argument(
    "--catalog", type=str, help="catalog name", default="Babusiaux2018"
)
parser.add_argument(
    "--cadence", type=str, choices=["long", "short"], default="long"
)

args = parser.parse_args()
cluster_name = args.cluster
catalog_name = args.catalog
cadence = args.cadence

c = cr.Cluster(catalog_name=catalog_name, cluster_name=cluster_name)
mem = c.query_cluster_members()
gaiaids = mem["source_id"].values

# print(len(gaiaids))

muscat_obs_constraint = mem.dec > -30
for gaiaid in tqdm(gaiaids[muscat_obs_constraint]):
    try:
        outdir = cluster_name.lower().replace(" ", "")
        fig = cr.plot_tql(
            gaiaid=gaiaid,
            cadence=cadence,
            savefig=True,
            savetls=True,
            outdir=outdir,
            verbose=False,
        )
    except Exception as e:
        print(e)
