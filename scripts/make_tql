#!/usr/bin/env python
import matplotlib
matplotlib.use('pdf')
import chronos as cr
from tqdm import tqdm
import argparse
parser = argparse.ArgumentParser(description='create tql based on chronos')
parser.add_argument('cluster', type=str, help='cluster name')
parser.add_argument('--catalog', type=str, help='catalog name', default='Babusiaux2018')

args = parser.parse_args()
cluster_name = args.cluster
catalog_name = args.catalog

c = cr.Cluster(catalog_name=catalog_name, cluster_name=cluster_name)
mem = c.query_cluster_members()

muscat_obs_constraint = mem.dec>-30

if catalog_name=='Babusiaux2018':
    gaiaids = mem['SourceId'].values
elif catalog_name=='CantatGaudin2018':
    gaiaids = mem['source_id'].values
elif catalog_name=='Bouma2019':
    gaiaids = mem['source_id'].values
else:
    raise ValueError('Invalid catalog name.')
#print(len(gaiaids))

for gaiaid in tqdm(gaiaids[muscat_obs_constraint]):
    try:
        outdir = cluster_name.lower().replace(' ','')
        fig = cr.make_tql(gaiaid=gaiaid, savefig=True, savetls=True, outdir=outdir, verbose=False);
    except Exception as e:
        print(e)


